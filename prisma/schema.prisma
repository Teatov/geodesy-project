// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:root@localhost:5432/geodesy"
}

model Record {
  id         String   @id @default(uuid())
  title      String
  content    String
  AuthUser   AuthUser @relation(fields: [authUserId], references: [id])
  authUserId String
}

model AuthUser {
  id           String        @id @unique
  auth_session AuthSession[]
  auth_key     AuthKey[]
  fullName     String
  email        String        @unique
  records      Record[]

  @@map("auth_user")
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model Survey {
  id                         String                 @id @default(uuid())
  createdAt                  DateTime               @default(now())
  updatedAt                  DateTime               @updatedAt
  federalSubject             String
  workBy                     String
  markerIndex                String
  markerName                 String
  placingYear                Int
  signType                   String
  signHeight                 Int
  centerType                 String
  altitude                   Int
  trapezes                   String
  signIsPlaced               MarkerPresenceState
  monolith1IsIntact          MarkerIntegrityState
  monolith2IsOpened          MarkerOpennessState
  monoliths3And4AreOpened    MarkerOpennessState
  outerSignIsIntact          MarkerIntegrityState
  orp1IsIntact               MarkerIntegrityState
  orp2IsIntact               MarkerIntegrityState
  trenchIsReadable           MarkerReadabilityState
  centerMarkPhoto            String
  exteriorPhoto              String
  upperMarkBelowGroundHeight String
  satelliteObservability     String
  createdBy                  String
  approvedBy                 String
}

enum MarkerPresenceState {
  MISSING
  PRESENT
}

enum MarkerIntegrityState {
  INTACT
  NOT_INTACT
}

enum MarkerOpennessState {
  OPENED
  NOT_CLOSED
}

enum MarkerReadabilityState {
  READABLE
  UNREADABLE
}

enum MarkerObservabilityState {
  OBSERVABLE
  CONDITIONALLY_OBSERVABLE
  UNOBSERVABLE
}
